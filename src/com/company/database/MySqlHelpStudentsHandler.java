package com.company.database;

import com.company.model.HelpStudents;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

public class MySqlHelpStudentsHandler extends MySqlHandler {

    public static boolean insertHelpStudent(HelpStudents helpStudents) {
        try (Connection connection = getDBConnection()) {

            final String query = "INSERT INTO `LanguagesSchool`.`help_students` (`student_username`, `message`) VALUES (?, ?); ";
            preparedStatement = connection.prepareStatement(query);
            preparedStatement.setString(1, helpStudents.getStudentUsername());
            preparedStatement.setString(2, helpStudents.getMessage());

            int rows = preparedStatement.executeUpdate();
            return rows > 0;
        } catch (Exception e) {
            e.printStackTrace();
            return false;
        } finally {
            closePreparedStatement();
        }
    }

    public static List<HelpStudents> selectAllHelpsStudents() {
        List<HelpStudents> helpStudents = new ArrayList<>();
        ResultSet resultSet = null;
        try (Connection connection = getDBConnection()) {

            final String query = "SELECT * FROM LanguagesSchool.help_students";

            preparedStatement = connection.prepareStatement(query);

            resultSet = preparedStatement.executeQuery();
            while (resultSet.next()) {
                HelpStudents helpStudent = new HelpStudents();
                getStudent(helpStudents, resultSet, helpStudent);
            }
            return helpStudents;
        } catch (SQLException e) {
            e.printStackTrace();
            return null;
        } finally {
            try {
                if (resultSet != null) {
                    resultSet.close();
                }
            } catch (SQLException e) {
                e.printStackTrace();
            } finally {
                closePreparedStatement();
            }
        }
    }

    public static List<HelpStudents> selectAllHelpsStudentsByStudentUsername(HelpStudents helpStudent) {
        List<HelpStudents> helpStudents = new ArrayList<>();
        ResultSet resultSet = null;
        try (Connection connection = getDBConnection()) {

            final String query = "SELECT * FROM LanguagesSchool.help_students WHERE student_username = ?";

            preparedStatement = connection.prepareStatement(query);
            preparedStatement.setString(1,helpStudent.getStudentUsername());

            resultSet = preparedStatement.executeQuery();
            while (resultSet.next()) {
                helpStudent = new HelpStudents();
                getStudent(helpStudents, resultSet, helpStudent);
            }
            return helpStudents;
        } catch (SQLException e) {
            e.printStackTrace();
            return null;
        } finally {
            try {
                if (resultSet != null) {
                    resultSet.close();
                }
            } catch (SQLException e) {
                e.printStackTrace();
            } finally {
                closePreparedStatement();
            }
        }
    }

    public static boolean deleteHelpStudent(HelpStudents helpStudents) {
        try (Connection connection = getDBConnection()) {

            final String query = "DELETE FROM LanguagesSchool.help_students WHERE (`id` = ?);\n";
            preparedStatement = connection.prepareStatement(query);
            preparedStatement.setInt(1, helpStudents.getId());

            int rows = preparedStatement.executeUpdate();
            return rows > 0;
        } catch (Exception e) {
            e.printStackTrace();
            return false;
        } finally {
            closePreparedStatement();
        }
    }

    //    Generated by Idea inspector

    private static void getStudent(List<HelpStudents> helpStudents, ResultSet resultSet, HelpStudents helpStudent) throws SQLException {
        helpStudent.setId(resultSet.getInt("id"));
        helpStudent.setStudentUsername(resultSet.getString("student_username"));
        helpStudent.setMessage(resultSet.getString("message"));
        helpStudent.setRequestDateTime(resultSet.getDate("request_date_time"));
        helpStudents.add(helpStudent);
    }
}
